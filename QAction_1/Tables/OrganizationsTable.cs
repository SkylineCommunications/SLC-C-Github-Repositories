// <auto-generated>This is auto-generated code by a DIS Macro. Do not modify.</auto-generated>
namespace Skyline.Protocol.Tables
{
    using System;
    using System.Collections.Generic;
    using System.Linq;

    using Skyline.DataMiner.Scripting;

    using SLNetMessages = Skyline.DataMiner.Net.Messages;

    public class OrganizationsTableRow
    {
        private string description = Exceptions.NotAvailable;
        public OrganizationsTableRow() { }

        public OrganizationsTableRow(params object[] row)
        {
            Instance = Convert.ToString(row[0]);
            Id = Convert.ToDouble(row[1]);
            Description = Convert.ToString(row[2]);
            AvatarURL = String.IsNullOrWhiteSpace(Convert.ToString(row[3])) ? null : new Uri(Convert.ToString(row[3]));
            Tracked = Convert.ToBoolean(row[4]);
        }

        public string Instance { get; set; }

        public double Id { get; set; }

        public string Description
        {
            get
            {
                if (String.IsNullOrWhiteSpace(description))
                {
                    return String.Empty;
                }
                else
                {
                    return description;
                }
            }

            set
            {
                if (String.IsNullOrWhiteSpace(value))
                {
                    description = Exceptions.NotAvailable;
                }
                else
                {
                    description = value;
                }
            }
        }

        public Uri AvatarURL { get; set; }

        public bool Tracked { get; set; }

        public static OrganizationsTableRow FromPK(SLProtocol protocol, string pk)
        {
            var row = (object[])protocol.GetRow(Parameter.Organizations.tablePid, pk);
            if (row[0] == null)
            {
                return default;
            }

            return new OrganizationsTableRow(row);
        }

        public object[] ToProtocolRow()
        {
            return new OrganizationsQActionRow
            {
                Organizationsinstance_3001 = Instance,
                Organizationsid_3002 = Id,
                Organizationsdescription_3003 = description,
                Organizationsavatarurl_3004 = AvatarURL.ToString(),
                Organizationstrackrepositories_3005 = Convert.ToDouble(Tracked),
            };
        }

        public void SaveToProtocol(SLProtocol protocol)
        {
            if (!protocol.Exists(Parameter.Organizations.tablePid, Instance))
            {
                protocol.AddRow(Parameter.Organizations.tablePid, ToProtocolRow());
            }
            else
            {
                protocol.SetRow(Parameter.Organizations.tablePid, Instance, ToProtocolRow());
            }
        }
    }

    public class OrganizationsTable
    {
        private static OrganizationsTable instance = new OrganizationsTable();

		#region Constructor
		protected OrganizationsTable() { }

        protected OrganizationsTable(SLProtocol protocol)
        {
            uint[] organizationsIdx = new uint[]
            {
                Parameter.Organizations.Idx.organizationsinstance_3001,
                Parameter.Organizations.Idx.organizationsid_3002,
                Parameter.Organizations.Idx.organizationsdescription_3003,
                Parameter.Organizations.Idx.organizationsavatarurl_3004,
                Parameter.Organizations.Idx.organizationstrackrepositories_3005,
            };
            object[] organizations = (object[])protocol.NotifyProtocol((int)SLNetMessages.NotifyType.NT_GET_TABLE_COLUMNS, Parameter.Organizations.tablePid, organizationsIdx);
            object[] instance = (object[])organizations[0];
            object[] id = (object[])organizations[1];
            object[] description = (object[])organizations[2];
            object[] avatarURL = (object[])organizations[3];
            object[] tracked = (object[])organizations[4];

            for (int i = 0; i < instance.Length; i++)
            {
                Rows.Add(new OrganizationsTableRow(
                instance[i],
                id[i],
                description[i],
                avatarURL[i],
                tracked[i]));
            }
        }
		#endregion

		public List<OrganizationsTableRow> Rows { get; set; } = new List<OrganizationsTableRow>();

        public static OrganizationsTable GetTable(SLProtocol protocol = null)
        {
			if (protocol != null)
			{
				instance = new OrganizationsTable(protocol);
			}

			return instance;
		}

		public void SaveToProtocol(SLProtocol protocol, bool partial = false)
        {
            List<object[]> rows = Rows.Select(x => x.ToProtocolRow()).ToList();
            NotifyProtocol.SaveOption option = partial ? NotifyProtocol.SaveOption.Partial : NotifyProtocol.SaveOption.Full;
            protocol.FillArray(Parameter.Organizations.tablePid, rows, option);
        }
    }
}
