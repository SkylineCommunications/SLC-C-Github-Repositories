// <auto-generated>This is auto-generated code by DIS. Do not modify.</auto-generated>
using System.ComponentModel;
using System.Collections;
using System.Collections.Generic;
using System.Linq;

namespace Skyline.DataMiner.Scripting
{
public static class Parameter
{
	/// <summary>PID: 5 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int explanation_5 = 5;
	/// <summary>PID: 5 | Type: read</summary>
	public const int explanation = 5;
	/// <summary>PID: 10 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int apikey_10 = 10;
	/// <summary>PID: 10 | Type: read</summary>
	public const int apikey = 10;
	/// <summary>PID: 11 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int apikeybearer_11 = 11;
	/// <summary>PID: 11 | Type: read</summary>
	public const int apikeybearer = 11;
	/// <summary>PID: 12 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int githubapiversion_12 = 12;
	/// <summary>PID: 12 | Type: read</summary>
	public const int githubapiversion = 12;
	/// <summary>PID: 15 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int ratelimit_15 = 15;
	/// <summary>PID: 15 | Type: read</summary>
	public const int ratelimit = 15;
	/// <summary>PID: 16 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int ratelimitremaining_16 = 16;
	/// <summary>PID: 16 | Type: read</summary>
	public const int ratelimitremaining = 16;
	/// <summary>PID: 17 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int ratelimitused_17 = 17;
	/// <summary>PID: 17 | Type: read</summary>
	public const int ratelimitused = 17;
	/// <summary>PID: 18 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int ratelimitreset_18 = 18;
	/// <summary>PID: 18 | Type: read</summary>
	public const int ratelimitreset = 18;
	/// <summary>PID: 19 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int ratelimitresetepochseconds_19 = 19;
	/// <summary>PID: 19 | Type: read</summary>
	public const int ratelimitresetepochseconds = 19;
	/// <summary>PID: 30 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int triggerrequesthandling_30 = 30;
	/// <summary>PID: 30 | Type: read</summary>
	public const int triggerrequesthandling = 30;
	/// <summary>PID: 100 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int statuscode_100 = 100;
	/// <summary>PID: 100 | Type: read</summary>
	public const int statuscode = 100;
	/// <summary>PID: 101 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int getrepositoryurl_101 = 101;
	/// <summary>PID: 101 | Type: read</summary>
	public const int getrepositoryurl = 101;
	/// <summary>PID: 102 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int getrepositoryissuesurl_102 = 102;
	/// <summary>PID: 102 | Type: read</summary>
	public const int getrepositoryissuesurl = 102;
	/// <summary>PID: 103 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int getrepositorytagsurl_103 = 103;
	/// <summary>PID: 103 | Type: read</summary>
	public const int getrepositorytagsurl = 103;
	/// <summary>PID: 104 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int getrepositoryreleasesurl_104 = 104;
	/// <summary>PID: 104 | Type: read</summary>
	public const int getrepositoryreleasesurl = 104;
	/// <summary>PID: 201 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int getrepositorycontent_201 = 201;
	/// <summary>PID: 201 | Type: read</summary>
	public const int getrepositorycontent = 201;
	/// <summary>PID: 202 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int getrepositoryissuescontent_202 = 202;
	/// <summary>PID: 202 | Type: read</summary>
	public const int getrepositoryissuescontent = 202;
	/// <summary>PID: 203 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int getrepositorytagscontent_203 = 203;
	/// <summary>PID: 203 | Type: read</summary>
	public const int getrepositorytagscontent = 203;
	/// <summary>PID: 204 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int getrepositoryreleasescontent_204 = 204;
	/// <summary>PID: 204 | Type: read</summary>
	public const int getrepositoryreleasescontent = 204;
	/// <summary>PID: 251 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int getrepositorylinkheader_251 = 251;
	/// <summary>PID: 251 | Type: read</summary>
	public const int getrepositorylinkheader = 251;
	/// <summary>PID: 252 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int getrepositoryissueslinkheader_252 = 252;
	/// <summary>PID: 252 | Type: read</summary>
	public const int getrepositoryissueslinkheader = 252;
	/// <summary>PID: 253 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int getrepositorytagslinkheader_253 = 253;
	/// <summary>PID: 253 | Type: read</summary>
	public const int getrepositorytagslinkheader = 253;
	/// <summary>PID: 254 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int getrepositoryreleaseslinkheader_254 = 254;
	/// <summary>PID: 254 | Type: read</summary>
	public const int getrepositoryreleaseslinkheader = 254;
	/// <summary>PID: 501 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int addrepositoryname_501 = 501;
	/// <summary>PID: 501 | Type: read</summary>
	public const int addrepositoryname = 501;
	/// <summary>PID: 502 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int addrepositoryowner_502 = 502;
	/// <summary>PID: 502 | Type: read</summary>
	public const int addrepositoryowner = 502;
	/// <summary>PID: 996 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int repositoriesoverview_996 = 996;
	/// <summary>PID: 996 | Type: read</summary>
	public const int repositoriesoverview = 996;
	public class Write
	{
		/// <summary>PID: 50 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int generalpagebuttons_50 = 50;
		/// <summary>PID: 50 | Type: write</summary>
		public const int generalpagebuttons = 50;
		/// <summary>PID: 51 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int addrepositorypagebutton_51 = 51;
		/// <summary>PID: 51 | Type: write</summary>
		public const int addrepositorypagebutton = 51;
		/// <summary>PID: 110 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int apikey_110 = 110;
		/// <summary>PID: 110 | Type: write</summary>
		public const int apikey = 110;
		/// <summary>PID: 112 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int githubapiversion_112 = 112;
		/// <summary>PID: 112 | Type: write</summary>
		public const int githubapiversion = 112;
		/// <summary>PID: 500 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int addrepositorybutton_500 = 500;
		/// <summary>PID: 500 | Type: write</summary>
		public const int addrepositorybutton = 500;
		/// <summary>PID: 601 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int addrepositoryname_601 = 601;
		/// <summary>PID: 601 | Type: write</summary>
		public const int addrepositoryname = 601;
		/// <summary>PID: 602 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int addrepositoryowner_602 = 602;
		/// <summary>PID: 602 | Type: write</summary>
		public const int addrepositoryowner = 602;
		/// <summary>PID: 990 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int repositories_contextmenu_990 = 990;
		/// <summary>PID: 990 | Type: write</summary>
		public const int repositories_contextmenu = 990;
		/// <summary>PID: 21053 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int pollmanagerpollstate_21053 = 21053;
		/// <summary>PID: 21053 | Type: write</summary>
		public const int pollmanagerpollstate = 21053;
		/// <summary>PID: 21054 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int pollmanagerpollfrequency_21054 = 21054;
		/// <summary>PID: 21054 | Type: write</summary>
		public const int pollmanagerpollfrequency = 21054;
	}
	public class Repositories
	{
		/// <summary>PID: 1000</summary>
		public const int tablePid = 1000;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 1001</summary>
		public const int indexColumnPid = 1001;
		public class Pid
		{
			/// <summary>PID: 1001 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoriesfullname_1001 = 1001;
			/// <summary>PID: 1001 | Type: read</summary>
			public const int repositoriesfullname = 1001;
			/// <summary>PID: 1002 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoriesname_1002 = 1002;
			/// <summary>PID: 1002 | Type: read</summary>
			public const int repositoriesname = 1002;
			/// <summary>PID: 1003 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoriesprivate_1003 = 1003;
			/// <summary>PID: 1003 | Type: read</summary>
			public const int repositoriesprivate = 1003;
			/// <summary>PID: 1004 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoriesdescription_1004 = 1004;
			/// <summary>PID: 1004 | Type: read</summary>
			public const int repositoriesdescription = 1004;
			/// <summary>PID: 1005 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoriesowner_1005 = 1005;
			/// <summary>PID: 1005 | Type: read</summary>
			public const int repositoriesowner = 1005;
			/// <summary>PID: 1006 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoriesfork_1006 = 1006;
			/// <summary>PID: 1006 | Type: read</summary>
			public const int repositoriesfork = 1006;
			/// <summary>PID: 1007 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoriescreatedat_1007 = 1007;
			/// <summary>PID: 1007 | Type: read</summary>
			public const int repositoriescreatedat = 1007;
			/// <summary>PID: 1008 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoriesupdatedat_1008 = 1008;
			/// <summary>PID: 1008 | Type: read</summary>
			public const int repositoriesupdatedat = 1008;
			/// <summary>PID: 1009 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoriespushedat_1009 = 1009;
			/// <summary>PID: 1009 | Type: read</summary>
			public const int repositoriespushedat = 1009;
			/// <summary>PID: 1010 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoriessize_1010 = 1010;
			/// <summary>PID: 1010 | Type: read</summary>
			public const int repositoriessize = 1010;
			/// <summary>PID: 1011 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoriesstars_1011 = 1011;
			/// <summary>PID: 1011 | Type: read</summary>
			public const int repositoriesstars = 1011;
			/// <summary>PID: 1012 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositorieswatcher_1012 = 1012;
			/// <summary>PID: 1012 | Type: read</summary>
			public const int repositorieswatcher = 1012;
			/// <summary>PID: 1013 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositorieslanguage_1013 = 1013;
			/// <summary>PID: 1013 | Type: read</summary>
			public const int repositorieslanguage = 1013;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoriesfullname_1001 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int repositoriesfullname = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoriesname_1002 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int repositoriesname = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoriesprivate_1003 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int repositoriesprivate = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoriesdescription_1004 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int repositoriesdescription = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoriesowner_1005 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int repositoriesowner = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoriesfork_1006 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int repositoriesfork = 5;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoriescreatedat_1007 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int repositoriescreatedat = 6;
			/// <summary>IDX: 7 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoriesupdatedat_1008 = 7;
			/// <summary>IDX: 7 | Type: read</summary>
			public const int repositoriesupdatedat = 7;
			/// <summary>IDX: 8 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoriespushedat_1009 = 8;
			/// <summary>IDX: 8 | Type: read</summary>
			public const int repositoriespushedat = 8;
			/// <summary>IDX: 9 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoriessize_1010 = 9;
			/// <summary>IDX: 9 | Type: read</summary>
			public const int repositoriessize = 9;
			/// <summary>IDX: 10 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoriesstars_1011 = 10;
			/// <summary>IDX: 10 | Type: read</summary>
			public const int repositoriesstars = 10;
			/// <summary>IDX: 11 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositorieswatcher_1012 = 11;
			/// <summary>IDX: 11 | Type: read</summary>
			public const int repositorieswatcher = 11;
			/// <summary>IDX: 12 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositorieslanguage_1013 = 12;
			/// <summary>IDX: 12 | Type: read</summary>
			public const int repositorieslanguage = 12;
		}
	}
	public class Repositorytags
	{
		/// <summary>PID: 1200</summary>
		public const int tablePid = 1200;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 1201</summary>
		public const int indexColumnPid = 1201;
		public class Pid
		{
			/// <summary>PID: 1201 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositorytagsid_1201 = 1201;
			/// <summary>PID: 1201 | Type: read</summary>
			public const int repositorytagsid = 1201;
			/// <summary>PID: 1202 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositorytagsname_1202 = 1202;
			/// <summary>PID: 1202 | Type: read</summary>
			public const int repositorytagsname = 1202;
			/// <summary>PID: 1203 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositorytagsrepositoryid_1203 = 1203;
			/// <summary>PID: 1203 | Type: read</summary>
			public const int repositorytagsrepositoryid = 1203;
			/// <summary>PID: 1204 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositorytagscommitsha_1204 = 1204;
			/// <summary>PID: 1204 | Type: read</summary>
			public const int repositorytagscommitsha = 1204;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositorytagsid_1201 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int repositorytagsid = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositorytagsname_1202 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int repositorytagsname = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositorytagsrepositoryid_1203 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int repositorytagsrepositoryid = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositorytagscommitsha_1204 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int repositorytagscommitsha = 3;
		}
	}
	public class Repositoryreleases
	{
		/// <summary>PID: 1400</summary>
		public const int tablePid = 1400;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 1401</summary>
		public const int indexColumnPid = 1401;
		public class Pid
		{
			/// <summary>PID: 1401 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoryreleasesinstance_1401 = 1401;
			/// <summary>PID: 1401 | Type: read</summary>
			public const int repositoryreleasesinstance = 1401;
			/// <summary>PID: 1402 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoryreleasesid_1402 = 1402;
			/// <summary>PID: 1402 | Type: read</summary>
			public const int repositoryreleasesid = 1402;
			/// <summary>PID: 1403 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoryreleasestagname_1403 = 1403;
			/// <summary>PID: 1403 | Type: read</summary>
			public const int repositoryreleasestagname = 1403;
			/// <summary>PID: 1404 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoryreleasestagid_1404 = 1404;
			/// <summary>PID: 1404 | Type: read</summary>
			public const int repositoryreleasestagid = 1404;
			/// <summary>PID: 1405 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoryreleasestargetcommitish_1405 = 1405;
			/// <summary>PID: 1405 | Type: read</summary>
			public const int repositoryreleasestargetcommitish = 1405;
			/// <summary>PID: 1406 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoryreleasesname_1406 = 1406;
			/// <summary>PID: 1406 | Type: read</summary>
			public const int repositoryreleasesname = 1406;
			/// <summary>PID: 1407 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoryreleasesdraft_1407 = 1407;
			/// <summary>PID: 1407 | Type: read</summary>
			public const int repositoryreleasesdraft = 1407;
			/// <summary>PID: 1408 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoryreleasesprerelease_1408 = 1408;
			/// <summary>PID: 1408 | Type: read</summary>
			public const int repositoryreleasesprerelease = 1408;
			/// <summary>PID: 1409 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoryreleasesbody_1409 = 1409;
			/// <summary>PID: 1409 | Type: read</summary>
			public const int repositoryreleasesbody = 1409;
			/// <summary>PID: 1410 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoryreleasesauthor_1410 = 1410;
			/// <summary>PID: 1410 | Type: read</summary>
			public const int repositoryreleasesauthor = 1410;
			/// <summary>PID: 1411 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoryreleasescreatedat_1411 = 1411;
			/// <summary>PID: 1411 | Type: read</summary>
			public const int repositoryreleasescreatedat = 1411;
			/// <summary>PID: 1412 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoryreleasespublishedat_1412 = 1412;
			/// <summary>PID: 1412 | Type: read</summary>
			public const int repositoryreleasespublishedat = 1412;
			/// <summary>PID: 1413 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoryreleasesrepositoryid_1413 = 1413;
			/// <summary>PID: 1413 | Type: read</summary>
			public const int repositoryreleasesrepositoryid = 1413;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoryreleasesinstance_1401 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int repositoryreleasesinstance = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoryreleasesid_1402 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int repositoryreleasesid = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoryreleasestagname_1403 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int repositoryreleasestagname = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoryreleasestagid_1404 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int repositoryreleasestagid = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoryreleasestargetcommitish_1405 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int repositoryreleasestargetcommitish = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoryreleasesname_1406 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int repositoryreleasesname = 5;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoryreleasesdraft_1407 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int repositoryreleasesdraft = 6;
			/// <summary>IDX: 7 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoryreleasesprerelease_1408 = 7;
			/// <summary>IDX: 7 | Type: read</summary>
			public const int repositoryreleasesprerelease = 7;
			/// <summary>IDX: 8 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoryreleasesbody_1409 = 8;
			/// <summary>IDX: 8 | Type: read</summary>
			public const int repositoryreleasesbody = 8;
			/// <summary>IDX: 9 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoryreleasesauthor_1410 = 9;
			/// <summary>IDX: 9 | Type: read</summary>
			public const int repositoryreleasesauthor = 9;
			/// <summary>IDX: 10 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoryreleasescreatedat_1411 = 10;
			/// <summary>IDX: 10 | Type: read</summary>
			public const int repositoryreleasescreatedat = 10;
			/// <summary>IDX: 11 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoryreleasespublishedat_1412 = 11;
			/// <summary>IDX: 11 | Type: read</summary>
			public const int repositoryreleasespublishedat = 11;
			/// <summary>IDX: 12 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoryreleasesrepositoryid_1413 = 12;
			/// <summary>IDX: 12 | Type: read</summary>
			public const int repositoryreleasesrepositoryid = 12;
		}
	}
	public class Repositoryissues
	{
		/// <summary>PID: 2000</summary>
		public const int tablePid = 2000;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 2001</summary>
		public const int indexColumnPid = 2001;
		public class Pid
		{
			/// <summary>PID: 2001 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoryissuesinstance_2001 = 2001;
			/// <summary>PID: 2001 | Type: read</summary>
			public const int repositoryissuesinstance = 2001;
			/// <summary>PID: 2002 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoryissuesnumber_2002 = 2002;
			/// <summary>PID: 2002 | Type: read</summary>
			public const int repositoryissuesnumber = 2002;
			/// <summary>PID: 2003 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoryissuestitle_2003 = 2003;
			/// <summary>PID: 2003 | Type: read</summary>
			public const int repositoryissuestitle = 2003;
			/// <summary>PID: 2004 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoryissuesbody_2004 = 2004;
			/// <summary>PID: 2004 | Type: read</summary>
			public const int repositoryissuesbody = 2004;
			/// <summary>PID: 2005 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoryissuescreator_2005 = 2005;
			/// <summary>PID: 2005 | Type: read</summary>
			public const int repositoryissuescreator = 2005;
			/// <summary>PID: 2006 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoryissuesstate_2006 = 2006;
			/// <summary>PID: 2006 | Type: read</summary>
			public const int repositoryissuesstate = 2006;
			/// <summary>PID: 2007 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoryissuesassignee_2007 = 2007;
			/// <summary>PID: 2007 | Type: read</summary>
			public const int repositoryissuesassignee = 2007;
			/// <summary>PID: 2008 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoryissuescreatedat_2008 = 2008;
			/// <summary>PID: 2008 | Type: read</summary>
			public const int repositoryissuescreatedat = 2008;
			/// <summary>PID: 2009 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoryissuesupdatedat_2009 = 2009;
			/// <summary>PID: 2009 | Type: read</summary>
			public const int repositoryissuesupdatedat = 2009;
			/// <summary>PID: 2010 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoryissuesclosedat_2010 = 2010;
			/// <summary>PID: 2010 | Type: read</summary>
			public const int repositoryissuesclosedat = 2010;
			/// <summary>PID: 2011 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoryissuesrepositoryid_2011 = 2011;
			/// <summary>PID: 2011 | Type: read</summary>
			public const int repositoryissuesrepositoryid = 2011;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoryissuesinstance_2001 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int repositoryissuesinstance = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoryissuesnumber_2002 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int repositoryissuesnumber = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoryissuestitle_2003 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int repositoryissuestitle = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoryissuesbody_2004 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int repositoryissuesbody = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoryissuescreator_2005 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int repositoryissuescreator = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoryissuesstate_2006 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int repositoryissuesstate = 5;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoryissuesassignee_2007 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int repositoryissuesassignee = 6;
			/// <summary>IDX: 7 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoryissuescreatedat_2008 = 7;
			/// <summary>IDX: 7 | Type: read</summary>
			public const int repositoryissuescreatedat = 7;
			/// <summary>IDX: 8 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoryissuesupdatedat_2009 = 8;
			/// <summary>IDX: 8 | Type: read</summary>
			public const int repositoryissuesupdatedat = 8;
			/// <summary>IDX: 9 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoryissuesclosedat_2010 = 9;
			/// <summary>IDX: 9 | Type: read</summary>
			public const int repositoryissuesclosedat = 9;
			/// <summary>IDX: 10 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int repositoryissuesrepositoryid_2011 = 10;
			/// <summary>IDX: 10 | Type: read</summary>
			public const int repositoryissuesrepositoryid = 10;
		}
	}
	public class Pollmanager
	{
		/// <summary>PID: 21000</summary>
		public const int tablePid = 21000;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 21001</summary>
		public const int indexColumnPid = 21001;
		public class Pid
		{
			/// <summary>PID: 21001 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int pollmanagerindex_21001 = 21001;
			/// <summary>PID: 21001 | Type: read</summary>
			public const int pollmanagerindex = 21001;
			/// <summary>PID: 21002 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int pollmanagername_21002 = 21002;
			/// <summary>PID: 21002 | Type: read</summary>
			public const int pollmanagername = 21002;
			/// <summary>PID: 21003 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int pollmanagerpollstate_21003 = 21003;
			/// <summary>PID: 21003 | Type: read</summary>
			public const int pollmanagerpollstate = 21003;
			/// <summary>PID: 21004 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int pollmanagerpollfrequency_21004 = 21004;
			/// <summary>PID: 21004 | Type: read</summary>
			public const int pollmanagerpollfrequency = 21004;
			/// <summary>PID: 21005 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int pollmanagerlastpolled_21005 = 21005;
			/// <summary>PID: 21005 | Type: read</summary>
			public const int pollmanagerlastpolled = 21005;
			/// <summary>PID: 21007 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int pollmanagerpreviouslypolled_21007 = 21007;
			/// <summary>PID: 21007 | Type: read</summary>
			public const int pollmanagerpreviouslypolled = 21007;
			public class Write
			{
				/// <summary>PID: 21006 | Type: write</summary>
				[EditorBrowsable(EditorBrowsableState.Never)]
				public const int pollmanagerrefresh_21006 = 21006;
				/// <summary>PID: 21006 | Type: write</summary>
				public const int pollmanagerrefresh = 21006;
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int pollmanagerindex_21001 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int pollmanagerindex = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int pollmanagername_21002 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int pollmanagername = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int pollmanagerpollstate_21003 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int pollmanagerpollstate = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int pollmanagerpollfrequency_21004 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int pollmanagerpollfrequency = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int pollmanagerlastpolled_21005 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int pollmanagerlastpolled = 4;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int pollmanagerpreviouslypolled_21007 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int pollmanagerpreviouslypolled = 6;
		}
	}
}
public class WriteParameters
{
	/// <summary>PID: 50  | Type: write | DISCREETS: Configuration... = Configuration, Poll Manager... = Poll Manager</summary>
	public System.Object Generalpagebuttons {get { return Protocol.GetParameter(50); }set { Protocol.SetParameter(50, value); }}
	/// <summary>PID: 51  | Type: write | DISCREETS: Add Repository... = Add Repository</summary>
	public System.Object Addrepositorypagebutton {get { return Protocol.GetParameter(51); }set { Protocol.SetParameter(51, value); }}
	/// <summary>PID: 110  | Type: write</summary>
	public System.Object Apikey {get { return Protocol.GetParameter(110); }set { Protocol.SetParameter(110, value); }}
	/// <summary>PID: 112  | Type: write | DISCREETS: 2022-11-28 = 2022-11-28</summary>
	public System.Object Githubapiversion {get { return Protocol.GetParameter(112); }set { Protocol.SetParameter(112, value); }}
	/// <summary>PID: 500  | Type: write | DISCREETS: Add Repositories = 1</summary>
	public System.Object Addrepositorybutton {get { return Protocol.GetParameter(500); }set { Protocol.SetParameter(500, value); }}
	/// <summary>PID: 601  | Type: write</summary>
	public System.Object Addrepositoryname {get { return Protocol.GetParameter(601); }set { Protocol.SetParameter(601, value); }}
	/// <summary>PID: 602  | Type: write</summary>
	public System.Object Addrepositoryowner {get { return Protocol.GetParameter(602); }set { Protocol.SetParameter(602, value); }}
	/// <summary>PID: 990  | Type: write | DISCREETS: Add... = 1, Delete selected row(s) = 2</summary>
	public System.Object Repositories_contextmenu {get { return Protocol.GetParameter(990); }set { Protocol.SetParameter(990, value); }}
	/// <summary>PID: 21006  | Type: write | DISCREETS: Refresh = 1</summary>
	public System.Object Pollmanagerrefresh {get { return Protocol.GetParameter(21006); }set { Protocol.SetParameter(21006, value); }}
	/// <summary>PID: 21053  | Type: write | DISCREETS: Disabled = 0, Enabled = 1</summary>
	public System.Object Pollmanagerpollstate {get { return Protocol.GetParameter(21053); }set { Protocol.SetParameter(21053, value); }}
	/// <summary>PID: 21054  | Type: write</summary>
	public System.Object Pollmanagerpollfrequency {get { return Protocol.GetParameter(21054); }set { Protocol.SetParameter(21054, value); }}
	public SLProtocolExt Protocol;
	public WriteParameters(SLProtocolExt protocol)
	{
		Protocol = protocol;
	}
}
public interface SLProtocolExt : SLProtocol
{
	/// <summary>PID: 1000</summary>
	RepositoriesQActionTable repositories { get; set; }
	/// <summary>PID: 1200</summary>
	RepositorytagsQActionTable repositorytags { get; set; }
	/// <summary>PID: 1400</summary>
	RepositoryreleasesQActionTable repositoryreleases { get; set; }
	/// <summary>PID: 2000</summary>
	RepositoryissuesQActionTable repositoryissues { get; set; }
	/// <summary>PID: 21000</summary>
	PollmanagerQActionTable pollmanager { get; set; }
	object Afterstartup_dummy { get; set; }
	object Explanation_5 { get; set; }
	object Explanation { get; set; }
	object Apikey_10 { get; set; }
	object Apikey { get; set; }
	object Apikeybearer_11 { get; set; }
	object Apikeybearer { get; set; }
	object Githubapiversion_12 { get; set; }
	object Githubapiversion { get; set; }
	object Ratelimit_15 { get; set; }
	object Ratelimit { get; set; }
	object Ratelimitremaining_16 { get; set; }
	object Ratelimitremaining { get; set; }
	object Ratelimitused_17 { get; set; }
	object Ratelimitused { get; set; }
	object Ratelimitreset_18 { get; set; }
	object Ratelimitreset { get; set; }
	object Ratelimitresetepochseconds_19 { get; set; }
	object Ratelimitresetepochseconds { get; set; }
	object Triggerrequesthandling_30 { get; set; }
	object Triggerrequesthandling { get; set; }
	object Generalpagebuttons_50 { get; set; }
	object Generalpagebuttons { get; set; }
	object Addrepositorypagebutton_51 { get; set; }
	object Addrepositorypagebutton { get; set; }
	object Statuscode_100 { get; set; }
	object Statuscode { get; set; }
	object Getrepositoryurl_101 { get; set; }
	object Getrepositoryurl { get; set; }
	object Getrepositoryissuesurl_102 { get; set; }
	object Getrepositoryissuesurl { get; set; }
	object Getrepositorytagsurl_103 { get; set; }
	object Getrepositorytagsurl { get; set; }
	object Getrepositoryreleasesurl_104 { get; set; }
	object Getrepositoryreleasesurl { get; set; }
	object Apikey_110 { get; set; }
	object Githubapiversion_112 { get; set; }
	object Getrepositorycontent_201 { get; set; }
	object Getrepositorycontent { get; set; }
	object Getrepositoryissuescontent_202 { get; set; }
	object Getrepositoryissuescontent { get; set; }
	object Getrepositorytagscontent_203 { get; set; }
	object Getrepositorytagscontent { get; set; }
	object Getrepositoryreleasescontent_204 { get; set; }
	object Getrepositoryreleasescontent { get; set; }
	object Getrepositorylinkheader_251 { get; set; }
	object Getrepositorylinkheader { get; set; }
	object Getrepositoryissueslinkheader_252 { get; set; }
	object Getrepositoryissueslinkheader { get; set; }
	object Getrepositorytagslinkheader_253 { get; set; }
	object Getrepositorytagslinkheader { get; set; }
	object Getrepositoryreleaseslinkheader_254 { get; set; }
	object Getrepositoryreleaseslinkheader { get; set; }
	object Addrepositorybutton_500 { get; set; }
	object Addrepositorybutton { get; set; }
	object Addrepositoryname_501 { get; set; }
	object Addrepositoryname { get; set; }
	object Addrepositoryowner_502 { get; set; }
	object Addrepositoryowner { get; set; }
	object Addrepositoryname_601 { get; set; }
	object Addrepositoryowner_602 { get; set; }
	object Repositories_contextmenu_990 { get; set; }
	object Repositories_contextmenu { get; set; }
	object Repositoriesoverview_996 { get; set; }
	object Repositoriesoverview { get; set; }
	object Repositoriesfullname_1001 { get; set; }
	object Repositoriesfullname { get; set; }
	object Repositoriesname_1002 { get; set; }
	object Repositoriesname { get; set; }
	object Repositoriesprivate_1003 { get; set; }
	object Repositoriesprivate { get; set; }
	object Repositoriesdescription_1004 { get; set; }
	object Repositoriesdescription { get; set; }
	object Repositoriesowner_1005 { get; set; }
	object Repositoriesowner { get; set; }
	object Repositoriesfork_1006 { get; set; }
	object Repositoriesfork { get; set; }
	object Repositoriescreatedat_1007 { get; set; }
	object Repositoriescreatedat { get; set; }
	object Repositoriesupdatedat_1008 { get; set; }
	object Repositoriesupdatedat { get; set; }
	object Repositoriespushedat_1009 { get; set; }
	object Repositoriespushedat { get; set; }
	object Repositoriessize_1010 { get; set; }
	object Repositoriessize { get; set; }
	object Repositoriesstars_1011 { get; set; }
	object Repositoriesstars { get; set; }
	object Repositorieswatcher_1012 { get; set; }
	object Repositorieswatcher { get; set; }
	object Repositorieslanguage_1013 { get; set; }
	object Repositorieslanguage { get; set; }
	object Repositorytagsid_1201 { get; set; }
	object Repositorytagsid { get; set; }
	object Repositorytagsname_1202 { get; set; }
	object Repositorytagsname { get; set; }
	object Repositorytagsrepositoryid_1203 { get; set; }
	object Repositorytagsrepositoryid { get; set; }
	object Repositorytagscommitsha_1204 { get; set; }
	object Repositorytagscommitsha { get; set; }
	object Repositoryreleasesinstance_1401 { get; set; }
	object Repositoryreleasesinstance { get; set; }
	object Repositoryreleasesid_1402 { get; set; }
	object Repositoryreleasesid { get; set; }
	object Repositoryreleasestagname_1403 { get; set; }
	object Repositoryreleasestagname { get; set; }
	object Repositoryreleasestagid_1404 { get; set; }
	object Repositoryreleasestagid { get; set; }
	object Repositoryreleasestargetcommitish_1405 { get; set; }
	object Repositoryreleasestargetcommitish { get; set; }
	object Repositoryreleasesname_1406 { get; set; }
	object Repositoryreleasesname { get; set; }
	object Repositoryreleasesdraft_1407 { get; set; }
	object Repositoryreleasesdraft { get; set; }
	object Repositoryreleasesprerelease_1408 { get; set; }
	object Repositoryreleasesprerelease { get; set; }
	object Repositoryreleasesbody_1409 { get; set; }
	object Repositoryreleasesbody { get; set; }
	object Repositoryreleasesauthor_1410 { get; set; }
	object Repositoryreleasesauthor { get; set; }
	object Repositoryreleasescreatedat_1411 { get; set; }
	object Repositoryreleasescreatedat { get; set; }
	object Repositoryreleasespublishedat_1412 { get; set; }
	object Repositoryreleasespublishedat { get; set; }
	object Repositoryreleasesrepositoryid_1413 { get; set; }
	object Repositoryreleasesrepositoryid { get; set; }
	object Repositoryissuesinstance_2001 { get; set; }
	object Repositoryissuesinstance { get; set; }
	object Repositoryissuesnumber_2002 { get; set; }
	object Repositoryissuesnumber { get; set; }
	object Repositoryissuestitle_2003 { get; set; }
	object Repositoryissuestitle { get; set; }
	object Repositoryissuesbody_2004 { get; set; }
	object Repositoryissuesbody { get; set; }
	object Repositoryissuescreator_2005 { get; set; }
	object Repositoryissuescreator { get; set; }
	object Repositoryissuesstate_2006 { get; set; }
	object Repositoryissuesstate { get; set; }
	object Repositoryissuesassignee_2007 { get; set; }
	object Repositoryissuesassignee { get; set; }
	object Repositoryissuescreatedat_2008 { get; set; }
	object Repositoryissuescreatedat { get; set; }
	object Repositoryissuesupdatedat_2009 { get; set; }
	object Repositoryissuesupdatedat { get; set; }
	object Repositoryissuesclosedat_2010 { get; set; }
	object Repositoryissuesclosedat { get; set; }
	object Repositoryissuesrepositoryid_2011 { get; set; }
	object Repositoryissuesrepositoryid { get; set; }
	object Pollmanagerindex_21001 { get; set; }
	object Pollmanagerindex { get; set; }
	object Pollmanagername_21002 { get; set; }
	object Pollmanagername { get; set; }
	object Pollmanagerpollstate_21003 { get; set; }
	object Pollmanagerpollstate { get; set; }
	object Pollmanagerpollfrequency_21004 { get; set; }
	object Pollmanagerpollfrequency { get; set; }
	object Pollmanagerlastpolled_21005 { get; set; }
	object Pollmanagerlastpolled { get; set; }
	object Pollmanagerrefresh_21006 { get; set; }
	object Pollmanagerrefresh { get; set; }
	object Pollmanagerpreviouslypolled_21007 { get; set; }
	object Pollmanagerpreviouslypolled { get; set; }
	object Pollmanagerpollstate_21053 { get; set; }
	object Pollmanagerpollfrequency_21054 { get; set; }
	WriteParameters Write { get; set; }
}
public class ConcreteSLProtocolExt : ConcreteSLProtocol, SLProtocolExt
{
	/// <summary>PID: 1000</summary>
	public RepositoriesQActionTable repositories { get; set; }
	/// <summary>PID: 1200</summary>
	public RepositorytagsQActionTable repositorytags { get; set; }
	/// <summary>PID: 1400</summary>
	public RepositoryreleasesQActionTable repositoryreleases { get; set; }
	/// <summary>PID: 2000</summary>
	public RepositoryissuesQActionTable repositoryissues { get; set; }
	/// <summary>PID: 21000</summary>
	public PollmanagerQActionTable pollmanager { get; set; }
	/// <summary>PID: 2  | Type: dummy</summary>
	public System.Object Afterstartup_dummy {get { return GetParameter(2); }set { SetParameter(2, value); }}
	/// <summary>PID: 5  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Explanation_5 {get { return GetParameter(5); }set { SetParameter(5, value); }}
	/// <summary>PID: 5  | Type: read</summary>
	public System.Object Explanation {get { return GetParameter(5); }set { SetParameter(5, value); }}
	/// <summary>PID: 10  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Apikey_10 {get { return GetParameter(10); }set { SetParameter(10, value); }}
	/// <summary>PID: 10  | Type: read</summary>
	public System.Object Apikey {get { return GetParameter(10); }set { SetParameter(10, value); }}
	/// <summary>PID: 11  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Apikeybearer_11 {get { return GetParameter(11); }set { SetParameter(11, value); }}
	/// <summary>PID: 11  | Type: read</summary>
	public System.Object Apikeybearer {get { return GetParameter(11); }set { SetParameter(11, value); }}
	/// <summary>PID: 12  | Type: read | DISCREETS: 2022-11-28 = 2022-11-28</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Githubapiversion_12 {get { return GetParameter(12); }set { SetParameter(12, value); }}
	/// <summary>PID: 12  | Type: read | DISCREETS: 2022-11-28 = 2022-11-28</summary>
	public System.Object Githubapiversion {get { return GetParameter(12); }set { SetParameter(12, value); }}
	/// <summary>PID: 15  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ratelimit_15 {get { return GetParameter(15); }set { SetParameter(15, value); }}
	/// <summary>PID: 15  | Type: read</summary>
	public System.Object Ratelimit {get { return GetParameter(15); }set { SetParameter(15, value); }}
	/// <summary>PID: 16  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ratelimitremaining_16 {get { return GetParameter(16); }set { SetParameter(16, value); }}
	/// <summary>PID: 16  | Type: read</summary>
	public System.Object Ratelimitremaining {get { return GetParameter(16); }set { SetParameter(16, value); }}
	/// <summary>PID: 17  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ratelimitused_17 {get { return GetParameter(17); }set { SetParameter(17, value); }}
	/// <summary>PID: 17  | Type: read</summary>
	public System.Object Ratelimitused {get { return GetParameter(17); }set { SetParameter(17, value); }}
	/// <summary>PID: 18  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ratelimitreset_18 {get { return GetParameter(18); }set { SetParameter(18, value); }}
	/// <summary>PID: 18  | Type: read</summary>
	public System.Object Ratelimitreset {get { return GetParameter(18); }set { SetParameter(18, value); }}
	/// <summary>PID: 19  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ratelimitresetepochseconds_19 {get { return GetParameter(19); }set { SetParameter(19, value); }}
	/// <summary>PID: 19  | Type: read</summary>
	public System.Object Ratelimitresetepochseconds {get { return GetParameter(19); }set { SetParameter(19, value); }}
	/// <summary>PID: 30  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Triggerrequesthandling_30 {get { return GetParameter(30); }set { SetParameter(30, value); }}
	/// <summary>PID: 30  | Type: read</summary>
	public System.Object Triggerrequesthandling {get { return GetParameter(30); }set { SetParameter(30, value); }}
	/// <summary>PID: 50  | Type: write | DISCREETS: Configuration... = Configuration, Poll Manager... = Poll Manager</summary>
	public System.Object Generalpagebuttons_50 {get { return GetParameter(50); }set { SetParameter(50, value); }}
	/// <summary>PID: 50  | Type: write | DISCREETS: Configuration... = Configuration, Poll Manager... = Poll Manager</summary>
	public System.Object Generalpagebuttons {get { return Write.Generalpagebuttons; }set { Write.Generalpagebuttons = value; }}
	/// <summary>PID: 51  | Type: write | DISCREETS: Add Repository... = Add Repository</summary>
	public System.Object Addrepositorypagebutton_51 {get { return GetParameter(51); }set { SetParameter(51, value); }}
	/// <summary>PID: 51  | Type: write | DISCREETS: Add Repository... = Add Repository</summary>
	public System.Object Addrepositorypagebutton {get { return Write.Addrepositorypagebutton; }set { Write.Addrepositorypagebutton = value; }}
	/// <summary>PID: 100  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Statuscode_100 {get { return GetParameter(100); }set { SetParameter(100, value); }}
	/// <summary>PID: 100  | Type: read</summary>
	public System.Object Statuscode {get { return GetParameter(100); }set { SetParameter(100, value); }}
	/// <summary>PID: 101  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Getrepositoryurl_101 {get { return GetParameter(101); }set { SetParameter(101, value); }}
	/// <summary>PID: 101  | Type: read</summary>
	public System.Object Getrepositoryurl {get { return GetParameter(101); }set { SetParameter(101, value); }}
	/// <summary>PID: 102  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Getrepositoryissuesurl_102 {get { return GetParameter(102); }set { SetParameter(102, value); }}
	/// <summary>PID: 102  | Type: read</summary>
	public System.Object Getrepositoryissuesurl {get { return GetParameter(102); }set { SetParameter(102, value); }}
	/// <summary>PID: 103  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Getrepositorytagsurl_103 {get { return GetParameter(103); }set { SetParameter(103, value); }}
	/// <summary>PID: 103  | Type: read</summary>
	public System.Object Getrepositorytagsurl {get { return GetParameter(103); }set { SetParameter(103, value); }}
	/// <summary>PID: 104  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Getrepositoryreleasesurl_104 {get { return GetParameter(104); }set { SetParameter(104, value); }}
	/// <summary>PID: 104  | Type: read</summary>
	public System.Object Getrepositoryreleasesurl {get { return GetParameter(104); }set { SetParameter(104, value); }}
	/// <summary>PID: 110  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Apikey_110 {get { return GetParameter(110); }set { SetParameter(110, value); }}
	/// <summary>PID: 112  | Type: write | DISCREETS: 2022-11-28 = 2022-11-28</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Githubapiversion_112 {get { return GetParameter(112); }set { SetParameter(112, value); }}
	/// <summary>PID: 201  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Getrepositorycontent_201 {get { return GetParameter(201); }set { SetParameter(201, value); }}
	/// <summary>PID: 201  | Type: read</summary>
	public System.Object Getrepositorycontent {get { return GetParameter(201); }set { SetParameter(201, value); }}
	/// <summary>PID: 202  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Getrepositoryissuescontent_202 {get { return GetParameter(202); }set { SetParameter(202, value); }}
	/// <summary>PID: 202  | Type: read</summary>
	public System.Object Getrepositoryissuescontent {get { return GetParameter(202); }set { SetParameter(202, value); }}
	/// <summary>PID: 203  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Getrepositorytagscontent_203 {get { return GetParameter(203); }set { SetParameter(203, value); }}
	/// <summary>PID: 203  | Type: read</summary>
	public System.Object Getrepositorytagscontent {get { return GetParameter(203); }set { SetParameter(203, value); }}
	/// <summary>PID: 204  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Getrepositoryreleasescontent_204 {get { return GetParameter(204); }set { SetParameter(204, value); }}
	/// <summary>PID: 204  | Type: read</summary>
	public System.Object Getrepositoryreleasescontent {get { return GetParameter(204); }set { SetParameter(204, value); }}
	/// <summary>PID: 251  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Getrepositorylinkheader_251 {get { return GetParameter(251); }set { SetParameter(251, value); }}
	/// <summary>PID: 251  | Type: read</summary>
	public System.Object Getrepositorylinkheader {get { return GetParameter(251); }set { SetParameter(251, value); }}
	/// <summary>PID: 252  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Getrepositoryissueslinkheader_252 {get { return GetParameter(252); }set { SetParameter(252, value); }}
	/// <summary>PID: 252  | Type: read</summary>
	public System.Object Getrepositoryissueslinkheader {get { return GetParameter(252); }set { SetParameter(252, value); }}
	/// <summary>PID: 253  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Getrepositorytagslinkheader_253 {get { return GetParameter(253); }set { SetParameter(253, value); }}
	/// <summary>PID: 253  | Type: read</summary>
	public System.Object Getrepositorytagslinkheader {get { return GetParameter(253); }set { SetParameter(253, value); }}
	/// <summary>PID: 254  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Getrepositoryreleaseslinkheader_254 {get { return GetParameter(254); }set { SetParameter(254, value); }}
	/// <summary>PID: 254  | Type: read</summary>
	public System.Object Getrepositoryreleaseslinkheader {get { return GetParameter(254); }set { SetParameter(254, value); }}
	/// <summary>PID: 500  | Type: write | DISCREETS: Add Repositories = 1</summary>
	public System.Object Addrepositorybutton_500 {get { return GetParameter(500); }set { SetParameter(500, value); }}
	/// <summary>PID: 500  | Type: write | DISCREETS: Add Repositories = 1</summary>
	public System.Object Addrepositorybutton {get { return Write.Addrepositorybutton; }set { Write.Addrepositorybutton = value; }}
	/// <summary>PID: 501  | Type: read | EXCEPTIONS: Please Fill in... = -2</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Addrepositoryname_501 {get { return GetParameter(501); }set { SetParameter(501, value); }}
	/// <summary>PID: 501  | Type: read | EXCEPTIONS: Please Fill in... = -2</summary>
	public System.Object Addrepositoryname {get { return GetParameter(501); }set { SetParameter(501, value); }}
	/// <summary>PID: 502  | Type: read | EXCEPTIONS: Please Fill in... = -2</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Addrepositoryowner_502 {get { return GetParameter(502); }set { SetParameter(502, value); }}
	/// <summary>PID: 502  | Type: read | EXCEPTIONS: Please Fill in... = -2</summary>
	public System.Object Addrepositoryowner {get { return GetParameter(502); }set { SetParameter(502, value); }}
	/// <summary>PID: 601  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Addrepositoryname_601 {get { return GetParameter(601); }set { SetParameter(601, value); }}
	/// <summary>PID: 602  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Addrepositoryowner_602 {get { return GetParameter(602); }set { SetParameter(602, value); }}
	/// <summary>PID: 990  | Type: write | DISCREETS: Add... = 1, Delete selected row(s) = 2</summary>
	public System.Object Repositories_contextmenu_990 {get { return GetParameter(990); }set { SetParameter(990, value); }}
	/// <summary>PID: 990  | Type: write | DISCREETS: Add... = 1, Delete selected row(s) = 2</summary>
	public System.Object Repositories_contextmenu {get { return Write.Repositories_contextmenu; }set { Write.Repositories_contextmenu = value; }}
	/// <summary>PID: 996  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoriesoverview_996 {get { return GetParameter(996); }set { SetParameter(996, value); }}
	/// <summary>PID: 996  | Type: read</summary>
	public System.Object Repositoriesoverview {get { return GetParameter(996); }set { SetParameter(996, value); }}
	/// <summary>PID: 1001  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoriesfullname_1001 {get { return GetParameter(1001); }set { SetParameter(1001, value); }}
	/// <summary>PID: 1001  | Type: read</summary>
	public System.Object Repositoriesfullname {get { return GetParameter(1001); }set { SetParameter(1001, value); }}
	/// <summary>PID: 1002  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoriesname_1002 {get { return GetParameter(1002); }set { SetParameter(1002, value); }}
	/// <summary>PID: 1002  | Type: read</summary>
	public System.Object Repositoriesname {get { return GetParameter(1002); }set { SetParameter(1002, value); }}
	/// <summary>PID: 1003  | Type: read | DISCREETS: Private = 1, Public = 0 | EXCEPTIONS: N/A = -2</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoriesprivate_1003 {get { return GetParameter(1003); }set { SetParameter(1003, value); }}
	/// <summary>PID: 1003  | Type: read | DISCREETS: Private = 1, Public = 0 | EXCEPTIONS: N/A = -2</summary>
	public System.Object Repositoriesprivate {get { return GetParameter(1003); }set { SetParameter(1003, value); }}
	/// <summary>PID: 1004  | Type: read | EXCEPTIONS: N/A = -2</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoriesdescription_1004 {get { return GetParameter(1004); }set { SetParameter(1004, value); }}
	/// <summary>PID: 1004  | Type: read | EXCEPTIONS: N/A = -2</summary>
	public System.Object Repositoriesdescription {get { return GetParameter(1004); }set { SetParameter(1004, value); }}
	/// <summary>PID: 1005  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoriesowner_1005 {get { return GetParameter(1005); }set { SetParameter(1005, value); }}
	/// <summary>PID: 1005  | Type: read</summary>
	public System.Object Repositoriesowner {get { return GetParameter(1005); }set { SetParameter(1005, value); }}
	/// <summary>PID: 1006  | Type: read | DISCREETS: Fork = 1, Normal = 0 | EXCEPTIONS: N/A = -2</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoriesfork_1006 {get { return GetParameter(1006); }set { SetParameter(1006, value); }}
	/// <summary>PID: 1006  | Type: read | DISCREETS: Fork = 1, Normal = 0 | EXCEPTIONS: N/A = -2</summary>
	public System.Object Repositoriesfork {get { return GetParameter(1006); }set { SetParameter(1006, value); }}
	/// <summary>PID: 1007  | Type: read | EXCEPTIONS: N/A = -2</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoriescreatedat_1007 {get { return GetParameter(1007); }set { SetParameter(1007, value); }}
	/// <summary>PID: 1007  | Type: read | EXCEPTIONS: N/A = -2</summary>
	public System.Object Repositoriescreatedat {get { return GetParameter(1007); }set { SetParameter(1007, value); }}
	/// <summary>PID: 1008  | Type: read | EXCEPTIONS: N/A = -2</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoriesupdatedat_1008 {get { return GetParameter(1008); }set { SetParameter(1008, value); }}
	/// <summary>PID: 1008  | Type: read | EXCEPTIONS: N/A = -2</summary>
	public System.Object Repositoriesupdatedat {get { return GetParameter(1008); }set { SetParameter(1008, value); }}
	/// <summary>PID: 1009  | Type: read | EXCEPTIONS: N/A = -2</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoriespushedat_1009 {get { return GetParameter(1009); }set { SetParameter(1009, value); }}
	/// <summary>PID: 1009  | Type: read | EXCEPTIONS: N/A = -2</summary>
	public System.Object Repositoriespushedat {get { return GetParameter(1009); }set { SetParameter(1009, value); }}
	/// <summary>PID: 1010  | Type: read | EXCEPTIONS: N/A = -2</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoriessize_1010 {get { return GetParameter(1010); }set { SetParameter(1010, value); }}
	/// <summary>PID: 1010  | Type: read | EXCEPTIONS: N/A = -2</summary>
	public System.Object Repositoriessize {get { return GetParameter(1010); }set { SetParameter(1010, value); }}
	/// <summary>PID: 1011  | Type: read | EXCEPTIONS: N/A = -2</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoriesstars_1011 {get { return GetParameter(1011); }set { SetParameter(1011, value); }}
	/// <summary>PID: 1011  | Type: read | EXCEPTIONS: N/A = -2</summary>
	public System.Object Repositoriesstars {get { return GetParameter(1011); }set { SetParameter(1011, value); }}
	/// <summary>PID: 1012  | Type: read | EXCEPTIONS: N/A = -2</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositorieswatcher_1012 {get { return GetParameter(1012); }set { SetParameter(1012, value); }}
	/// <summary>PID: 1012  | Type: read | EXCEPTIONS: N/A = -2</summary>
	public System.Object Repositorieswatcher {get { return GetParameter(1012); }set { SetParameter(1012, value); }}
	/// <summary>PID: 1013  | Type: read | EXCEPTIONS: N/A = -2</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositorieslanguage_1013 {get { return GetParameter(1013); }set { SetParameter(1013, value); }}
	/// <summary>PID: 1013  | Type: read | EXCEPTIONS: N/A = -2</summary>
	public System.Object Repositorieslanguage {get { return GetParameter(1013); }set { SetParameter(1013, value); }}
	/// <summary>PID: 1201  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositorytagsid_1201 {get { return GetParameter(1201); }set { SetParameter(1201, value); }}
	/// <summary>PID: 1201  | Type: read</summary>
	public System.Object Repositorytagsid {get { return GetParameter(1201); }set { SetParameter(1201, value); }}
	/// <summary>PID: 1202  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositorytagsname_1202 {get { return GetParameter(1202); }set { SetParameter(1202, value); }}
	/// <summary>PID: 1202  | Type: read</summary>
	public System.Object Repositorytagsname {get { return GetParameter(1202); }set { SetParameter(1202, value); }}
	/// <summary>PID: 1203  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositorytagsrepositoryid_1203 {get { return GetParameter(1203); }set { SetParameter(1203, value); }}
	/// <summary>PID: 1203  | Type: read</summary>
	public System.Object Repositorytagsrepositoryid {get { return GetParameter(1203); }set { SetParameter(1203, value); }}
	/// <summary>PID: 1204  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositorytagscommitsha_1204 {get { return GetParameter(1204); }set { SetParameter(1204, value); }}
	/// <summary>PID: 1204  | Type: read</summary>
	public System.Object Repositorytagscommitsha {get { return GetParameter(1204); }set { SetParameter(1204, value); }}
	/// <summary>PID: 1401  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoryreleasesinstance_1401 {get { return GetParameter(1401); }set { SetParameter(1401, value); }}
	/// <summary>PID: 1401  | Type: read</summary>
	public System.Object Repositoryreleasesinstance {get { return GetParameter(1401); }set { SetParameter(1401, value); }}
	/// <summary>PID: 1402  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoryreleasesid_1402 {get { return GetParameter(1402); }set { SetParameter(1402, value); }}
	/// <summary>PID: 1402  | Type: read</summary>
	public System.Object Repositoryreleasesid {get { return GetParameter(1402); }set { SetParameter(1402, value); }}
	/// <summary>PID: 1403  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoryreleasestagname_1403 {get { return GetParameter(1403); }set { SetParameter(1403, value); }}
	/// <summary>PID: 1403  | Type: read</summary>
	public System.Object Repositoryreleasestagname {get { return GetParameter(1403); }set { SetParameter(1403, value); }}
	/// <summary>PID: 1404  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoryreleasestagid_1404 {get { return GetParameter(1404); }set { SetParameter(1404, value); }}
	/// <summary>PID: 1404  | Type: read</summary>
	public System.Object Repositoryreleasestagid {get { return GetParameter(1404); }set { SetParameter(1404, value); }}
	/// <summary>PID: 1405  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoryreleasestargetcommitish_1405 {get { return GetParameter(1405); }set { SetParameter(1405, value); }}
	/// <summary>PID: 1405  | Type: read</summary>
	public System.Object Repositoryreleasestargetcommitish {get { return GetParameter(1405); }set { SetParameter(1405, value); }}
	/// <summary>PID: 1406  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoryreleasesname_1406 {get { return GetParameter(1406); }set { SetParameter(1406, value); }}
	/// <summary>PID: 1406  | Type: read</summary>
	public System.Object Repositoryreleasesname {get { return GetParameter(1406); }set { SetParameter(1406, value); }}
	/// <summary>PID: 1407  | Type: read | DISCREETS: Draft = 1, Normal = 0</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoryreleasesdraft_1407 {get { return GetParameter(1407); }set { SetParameter(1407, value); }}
	/// <summary>PID: 1407  | Type: read | DISCREETS: Draft = 1, Normal = 0</summary>
	public System.Object Repositoryreleasesdraft {get { return GetParameter(1407); }set { SetParameter(1407, value); }}
	/// <summary>PID: 1408  | Type: read | DISCREETS: Pre-Release = 1, Release = 0</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoryreleasesprerelease_1408 {get { return GetParameter(1408); }set { SetParameter(1408, value); }}
	/// <summary>PID: 1408  | Type: read | DISCREETS: Pre-Release = 1, Release = 0</summary>
	public System.Object Repositoryreleasesprerelease {get { return GetParameter(1408); }set { SetParameter(1408, value); }}
	/// <summary>PID: 1409  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoryreleasesbody_1409 {get { return GetParameter(1409); }set { SetParameter(1409, value); }}
	/// <summary>PID: 1409  | Type: read</summary>
	public System.Object Repositoryreleasesbody {get { return GetParameter(1409); }set { SetParameter(1409, value); }}
	/// <summary>PID: 1410  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoryreleasesauthor_1410 {get { return GetParameter(1410); }set { SetParameter(1410, value); }}
	/// <summary>PID: 1410  | Type: read</summary>
	public System.Object Repositoryreleasesauthor {get { return GetParameter(1410); }set { SetParameter(1410, value); }}
	/// <summary>PID: 1411  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoryreleasescreatedat_1411 {get { return GetParameter(1411); }set { SetParameter(1411, value); }}
	/// <summary>PID: 1411  | Type: read</summary>
	public System.Object Repositoryreleasescreatedat {get { return GetParameter(1411); }set { SetParameter(1411, value); }}
	/// <summary>PID: 1412  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoryreleasespublishedat_1412 {get { return GetParameter(1412); }set { SetParameter(1412, value); }}
	/// <summary>PID: 1412  | Type: read</summary>
	public System.Object Repositoryreleasespublishedat {get { return GetParameter(1412); }set { SetParameter(1412, value); }}
	/// <summary>PID: 1413  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoryreleasesrepositoryid_1413 {get { return GetParameter(1413); }set { SetParameter(1413, value); }}
	/// <summary>PID: 1413  | Type: read</summary>
	public System.Object Repositoryreleasesrepositoryid {get { return GetParameter(1413); }set { SetParameter(1413, value); }}
	/// <summary>PID: 2001  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoryissuesinstance_2001 {get { return GetParameter(2001); }set { SetParameter(2001, value); }}
	/// <summary>PID: 2001  | Type: read</summary>
	public System.Object Repositoryissuesinstance {get { return GetParameter(2001); }set { SetParameter(2001, value); }}
	/// <summary>PID: 2002  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoryissuesnumber_2002 {get { return GetParameter(2002); }set { SetParameter(2002, value); }}
	/// <summary>PID: 2002  | Type: read</summary>
	public System.Object Repositoryissuesnumber {get { return GetParameter(2002); }set { SetParameter(2002, value); }}
	/// <summary>PID: 2003  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoryissuestitle_2003 {get { return GetParameter(2003); }set { SetParameter(2003, value); }}
	/// <summary>PID: 2003  | Type: read</summary>
	public System.Object Repositoryissuestitle {get { return GetParameter(2003); }set { SetParameter(2003, value); }}
	/// <summary>PID: 2004  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoryissuesbody_2004 {get { return GetParameter(2004); }set { SetParameter(2004, value); }}
	/// <summary>PID: 2004  | Type: read</summary>
	public System.Object Repositoryissuesbody {get { return GetParameter(2004); }set { SetParameter(2004, value); }}
	/// <summary>PID: 2005  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoryissuescreator_2005 {get { return GetParameter(2005); }set { SetParameter(2005, value); }}
	/// <summary>PID: 2005  | Type: read</summary>
	public System.Object Repositoryissuescreator {get { return GetParameter(2005); }set { SetParameter(2005, value); }}
	/// <summary>PID: 2006  | Type: read | DISCREETS: Open = open, Closed = closed</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoryissuesstate_2006 {get { return GetParameter(2006); }set { SetParameter(2006, value); }}
	/// <summary>PID: 2006  | Type: read | DISCREETS: Open = open, Closed = closed</summary>
	public System.Object Repositoryissuesstate {get { return GetParameter(2006); }set { SetParameter(2006, value); }}
	/// <summary>PID: 2007  | Type: read | EXCEPTIONS: N/A = -2</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoryissuesassignee_2007 {get { return GetParameter(2007); }set { SetParameter(2007, value); }}
	/// <summary>PID: 2007  | Type: read | EXCEPTIONS: N/A = -2</summary>
	public System.Object Repositoryissuesassignee {get { return GetParameter(2007); }set { SetParameter(2007, value); }}
	/// <summary>PID: 2008  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoryissuescreatedat_2008 {get { return GetParameter(2008); }set { SetParameter(2008, value); }}
	/// <summary>PID: 2008  | Type: read</summary>
	public System.Object Repositoryissuescreatedat {get { return GetParameter(2008); }set { SetParameter(2008, value); }}
	/// <summary>PID: 2009  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoryissuesupdatedat_2009 {get { return GetParameter(2009); }set { SetParameter(2009, value); }}
	/// <summary>PID: 2009  | Type: read</summary>
	public System.Object Repositoryissuesupdatedat {get { return GetParameter(2009); }set { SetParameter(2009, value); }}
	/// <summary>PID: 2010  | Type: read | EXCEPTIONS: N/A = -2</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoryissuesclosedat_2010 {get { return GetParameter(2010); }set { SetParameter(2010, value); }}
	/// <summary>PID: 2010  | Type: read | EXCEPTIONS: N/A = -2</summary>
	public System.Object Repositoryissuesclosedat {get { return GetParameter(2010); }set { SetParameter(2010, value); }}
	/// <summary>PID: 2011  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoryissuesrepositoryid_2011 {get { return GetParameter(2011); }set { SetParameter(2011, value); }}
	/// <summary>PID: 2011  | Type: read</summary>
	public System.Object Repositoryissuesrepositoryid {get { return GetParameter(2011); }set { SetParameter(2011, value); }}
	/// <summary>PID: 21001  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollmanagerindex_21001 {get { return GetParameter(21001); }set { SetParameter(21001, value); }}
	/// <summary>PID: 21001  | Type: read</summary>
	public System.Object Pollmanagerindex {get { return GetParameter(21001); }set { SetParameter(21001, value); }}
	/// <summary>PID: 21002  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollmanagername_21002 {get { return GetParameter(21002); }set { SetParameter(21002, value); }}
	/// <summary>PID: 21002  | Type: read</summary>
	public System.Object Pollmanagername {get { return GetParameter(21002); }set { SetParameter(21002, value); }}
	/// <summary>PID: 21003  | Type: read | DISCREETS: Disabled = 0, Enabled = 1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollmanagerpollstate_21003 {get { return GetParameter(21003); }set { SetParameter(21003, value); }}
	/// <summary>PID: 21003  | Type: read | DISCREETS: Disabled = 0, Enabled = 1</summary>
	public System.Object Pollmanagerpollstate {get { return GetParameter(21003); }set { SetParameter(21003, value); }}
	/// <summary>PID: 21004  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollmanagerpollfrequency_21004 {get { return GetParameter(21004); }set { SetParameter(21004, value); }}
	/// <summary>PID: 21004  | Type: read</summary>
	public System.Object Pollmanagerpollfrequency {get { return GetParameter(21004); }set { SetParameter(21004, value); }}
	/// <summary>PID: 21005  | Type: read | EXCEPTIONS: Not Polled = 0</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollmanagerlastpolled_21005 {get { return GetParameter(21005); }set { SetParameter(21005, value); }}
	/// <summary>PID: 21005  | Type: read | EXCEPTIONS: Not Polled = 0</summary>
	public System.Object Pollmanagerlastpolled {get { return GetParameter(21005); }set { SetParameter(21005, value); }}
	/// <summary>PID: 21006  | Type: write | DISCREETS: Refresh = 1</summary>
	public System.Object Pollmanagerrefresh_21006 {get { return GetParameter(21006); }set { SetParameter(21006, value); }}
	/// <summary>PID: 21006  | Type: write | DISCREETS: Refresh = 1</summary>
	public System.Object Pollmanagerrefresh {get { return Write.Pollmanagerrefresh; }set { Write.Pollmanagerrefresh = value; }}
	/// <summary>PID: 21007  | Type: read | EXCEPTIONS: Not Polled = 0</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollmanagerpreviouslypolled_21007 {get { return GetParameter(21007); }set { SetParameter(21007, value); }}
	/// <summary>PID: 21007  | Type: read | EXCEPTIONS: Not Polled = 0</summary>
	public System.Object Pollmanagerpreviouslypolled {get { return GetParameter(21007); }set { SetParameter(21007, value); }}
	/// <summary>PID: 21053  | Type: write | DISCREETS: Disabled = 0, Enabled = 1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollmanagerpollstate_21053 {get { return GetParameter(21053); }set { SetParameter(21053, value); }}
	/// <summary>PID: 21054  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollmanagerpollfrequency_21054 {get { return GetParameter(21054); }set { SetParameter(21054, value); }}
	public WriteParameters Write { get; set; }
	public ConcreteSLProtocolExt()
	{
		repositories = new RepositoriesQActionTable(this, 1000, "repositories");
		repositorytags = new RepositorytagsQActionTable(this, 1200, "repositorytags");
		repositoryreleases = new RepositoryreleasesQActionTable(this, 1400, "repositoryreleases");
		repositoryissues = new RepositoryissuesQActionTable(this, 2000, "repositoryissues");
		pollmanager = new PollmanagerQActionTable(this, 21000, "pollmanager");
		Write = new WriteParameters(this);
	}
}
/// <summary>IDX: 0</summary>
public class RepositoriesQActionTable : QActionTable, IEnumerable<RepositoriesQActionRow>
{
	public RepositoriesQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<RepositoriesQActionRow> GetEnumerator() { return new QActionTableEnumerator<RepositoriesQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class RepositorytagsQActionTable : QActionTable, IEnumerable<RepositorytagsQActionRow>
{
	public RepositorytagsQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<RepositorytagsQActionRow> GetEnumerator() { return new QActionTableEnumerator<RepositorytagsQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class RepositoryreleasesQActionTable : QActionTable, IEnumerable<RepositoryreleasesQActionRow>
{
	public RepositoryreleasesQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<RepositoryreleasesQActionRow> GetEnumerator() { return new QActionTableEnumerator<RepositoryreleasesQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class RepositoryissuesQActionTable : QActionTable, IEnumerable<RepositoryissuesQActionRow>
{
	public RepositoryissuesQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<RepositoryissuesQActionRow> GetEnumerator() { return new QActionTableEnumerator<RepositoryissuesQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class PollmanagerQActionTable : QActionTable, IEnumerable<PollmanagerQActionRow>
{
	public PollmanagerQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<PollmanagerQActionRow> GetEnumerator() { return new QActionTableEnumerator<PollmanagerQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class RepositoriesQActionRow : QActionTableRow
{
	/// <summary>PID: 1001 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoriesfullname_1001 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 1001 | Type: read</summary>
	public System.Object Repositoriesfullname { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 1002 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoriesname_1002 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 1002 | Type: read</summary>
	public System.Object Repositoriesname { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 1003 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoriesprivate_1003 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 1003 | Type: read</summary>
	public System.Object Repositoriesprivate { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 1004 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoriesdescription_1004 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 1004 | Type: read</summary>
	public System.Object Repositoriesdescription { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 1005 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoriesowner_1005 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 1005 | Type: read</summary>
	public System.Object Repositoriesowner { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 1006 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoriesfork_1006 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 1006 | Type: read</summary>
	public System.Object Repositoriesfork { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 1007 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoriescreatedat_1007 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 1007 | Type: read</summary>
	public System.Object Repositoriescreatedat { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 1008 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoriesupdatedat_1008 { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 1008 | Type: read</summary>
	public System.Object Repositoriesupdatedat { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 1009 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoriespushedat_1009 { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 1009 | Type: read</summary>
	public System.Object Repositoriespushedat { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 1010 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoriessize_1010 { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 1010 | Type: read</summary>
	public System.Object Repositoriessize { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 1011 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoriesstars_1011 { get { if (base.Columns.ContainsKey(10)) { return base.Columns[10]; } else { return null; } } set { if (base.Columns.ContainsKey(10)) { base.Columns[10] = value; } else { base.Columns.Add(10, value); } } }
	/// <summary>PID: 1011 | Type: read</summary>
	public System.Object Repositoriesstars { get { if (base.Columns.ContainsKey(10)) { return base.Columns[10]; } else { return null; } } set { if (base.Columns.ContainsKey(10)) { base.Columns[10] = value; } else { base.Columns.Add(10, value); } } }
	/// <summary>PID: 1012 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositorieswatcher_1012 { get { if (base.Columns.ContainsKey(11)) { return base.Columns[11]; } else { return null; } } set { if (base.Columns.ContainsKey(11)) { base.Columns[11] = value; } else { base.Columns.Add(11, value); } } }
	/// <summary>PID: 1012 | Type: read</summary>
	public System.Object Repositorieswatcher { get { if (base.Columns.ContainsKey(11)) { return base.Columns[11]; } else { return null; } } set { if (base.Columns.ContainsKey(11)) { base.Columns[11] = value; } else { base.Columns.Add(11, value); } } }
	/// <summary>PID: 1013 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositorieslanguage_1013 { get { if (base.Columns.ContainsKey(12)) { return base.Columns[12]; } else { return null; } } set { if (base.Columns.ContainsKey(12)) { base.Columns[12] = value; } else { base.Columns.Add(12, value); } } }
	/// <summary>PID: 1013 | Type: read</summary>
	public System.Object Repositorieslanguage { get { if (base.Columns.ContainsKey(12)) { return base.Columns[12]; } else { return null; } } set { if (base.Columns.ContainsKey(12)) { base.Columns[12] = value; } else { base.Columns.Add(12, value); } } }
	public RepositoriesQActionRow() : base(0, 13) { }
	public RepositoriesQActionRow(System.Object[] oRow) : base(0, 13, oRow) { }
	public static implicit operator RepositoriesQActionRow(System.Object[] source) { return new RepositoriesQActionRow(source); }
	public static implicit operator System.Object[](RepositoriesQActionRow source) { return source.ToObjectArray(); }
	public System.String[] GetChildKeysRepositorytagsRepositorytagsrepositoryid(SLProtocol protocol) { return (System.String[])protocol.NotifyProtocol(196, 1203, Key); }
	public System.String[] GetChildKeysRepositoryreleasesRepositoryreleasesrepositoryid(SLProtocol protocol) { return (System.String[])protocol.NotifyProtocol(196, 1413, Key); }
	public System.String[] GetChildKeysRepositoryissuesRepositoryissuesrepositoryid(SLProtocol protocol) { return (System.String[])protocol.NotifyProtocol(196, 2011, Key); }
}
/// <summary>IDX: 0</summary>
public class RepositorytagsQActionRow : QActionTableRow
{
	/// <summary>PID: 1201 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositorytagsid_1201 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 1201 | Type: read</summary>
	public System.Object Repositorytagsid { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 1202 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositorytagsname_1202 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 1202 | Type: read</summary>
	public System.Object Repositorytagsname { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 1203 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositorytagsrepositoryid_1203 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 1203 | Type: read</summary>
	public System.Object Repositorytagsrepositoryid { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 1204 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositorytagscommitsha_1204 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 1204 | Type: read</summary>
	public System.Object Repositorytagscommitsha { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	public RepositorytagsQActionRow() : base(0, 4) { }
	public RepositorytagsQActionRow(System.Object[] oRow) : base(0, 4, oRow) { }
	public static implicit operator RepositorytagsQActionRow(System.Object[] source) { return new RepositorytagsQActionRow(source); }
	public static implicit operator System.Object[](RepositorytagsQActionRow source) { return source.ToObjectArray(); }
	public System.Object[] GetParentRowRepositoriesRepositorytagsrepositoryid(SLProtocol protocol) { return (System.Object[])protocol.GetRow(1000, (System.String)Repositorytagsrepositoryid); }
	public System.String[] GetChildKeysRepositoryreleasesRepositoryreleasestagid(SLProtocol protocol) { return (System.String[])protocol.NotifyProtocol(196, 1404, Key); }
}
/// <summary>IDX: 0</summary>
public class RepositoryreleasesQActionRow : QActionTableRow
{
	/// <summary>PID: 1401 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoryreleasesinstance_1401 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 1401 | Type: read</summary>
	public System.Object Repositoryreleasesinstance { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 1402 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoryreleasesid_1402 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 1402 | Type: read</summary>
	public System.Object Repositoryreleasesid { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 1403 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoryreleasestagname_1403 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 1403 | Type: read</summary>
	public System.Object Repositoryreleasestagname { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 1404 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoryreleasestagid_1404 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 1404 | Type: read</summary>
	public System.Object Repositoryreleasestagid { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 1405 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoryreleasestargetcommitish_1405 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 1405 | Type: read</summary>
	public System.Object Repositoryreleasestargetcommitish { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 1406 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoryreleasesname_1406 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 1406 | Type: read</summary>
	public System.Object Repositoryreleasesname { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 1407 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoryreleasesdraft_1407 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 1407 | Type: read</summary>
	public System.Object Repositoryreleasesdraft { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 1408 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoryreleasesprerelease_1408 { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 1408 | Type: read</summary>
	public System.Object Repositoryreleasesprerelease { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 1409 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoryreleasesbody_1409 { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 1409 | Type: read</summary>
	public System.Object Repositoryreleasesbody { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 1410 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoryreleasesauthor_1410 { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 1410 | Type: read</summary>
	public System.Object Repositoryreleasesauthor { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 1411 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoryreleasescreatedat_1411 { get { if (base.Columns.ContainsKey(10)) { return base.Columns[10]; } else { return null; } } set { if (base.Columns.ContainsKey(10)) { base.Columns[10] = value; } else { base.Columns.Add(10, value); } } }
	/// <summary>PID: 1411 | Type: read</summary>
	public System.Object Repositoryreleasescreatedat { get { if (base.Columns.ContainsKey(10)) { return base.Columns[10]; } else { return null; } } set { if (base.Columns.ContainsKey(10)) { base.Columns[10] = value; } else { base.Columns.Add(10, value); } } }
	/// <summary>PID: 1412 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoryreleasespublishedat_1412 { get { if (base.Columns.ContainsKey(11)) { return base.Columns[11]; } else { return null; } } set { if (base.Columns.ContainsKey(11)) { base.Columns[11] = value; } else { base.Columns.Add(11, value); } } }
	/// <summary>PID: 1412 | Type: read</summary>
	public System.Object Repositoryreleasespublishedat { get { if (base.Columns.ContainsKey(11)) { return base.Columns[11]; } else { return null; } } set { if (base.Columns.ContainsKey(11)) { base.Columns[11] = value; } else { base.Columns.Add(11, value); } } }
	/// <summary>PID: 1413 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoryreleasesrepositoryid_1413 { get { if (base.Columns.ContainsKey(12)) { return base.Columns[12]; } else { return null; } } set { if (base.Columns.ContainsKey(12)) { base.Columns[12] = value; } else { base.Columns.Add(12, value); } } }
	/// <summary>PID: 1413 | Type: read</summary>
	public System.Object Repositoryreleasesrepositoryid { get { if (base.Columns.ContainsKey(12)) { return base.Columns[12]; } else { return null; } } set { if (base.Columns.ContainsKey(12)) { base.Columns[12] = value; } else { base.Columns.Add(12, value); } } }
	public RepositoryreleasesQActionRow() : base(0, 13) { }
	public RepositoryreleasesQActionRow(System.Object[] oRow) : base(0, 13, oRow) { }
	public static implicit operator RepositoryreleasesQActionRow(System.Object[] source) { return new RepositoryreleasesQActionRow(source); }
	public static implicit operator System.Object[](RepositoryreleasesQActionRow source) { return source.ToObjectArray(); }
	public System.Object[] GetParentRowRepositorytagsRepositoryreleasestagid(SLProtocol protocol) { return (System.Object[])protocol.GetRow(1200, (System.String)Repositoryreleasestagid); }
	public System.Object[] GetParentRowRepositoriesRepositoryreleasesrepositoryid(SLProtocol protocol) { return (System.Object[])protocol.GetRow(1000, (System.String)Repositoryreleasesrepositoryid); }
}
/// <summary>IDX: 0</summary>
public class RepositoryissuesQActionRow : QActionTableRow
{
	/// <summary>PID: 2001 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoryissuesinstance_2001 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 2001 | Type: read</summary>
	public System.Object Repositoryissuesinstance { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 2002 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoryissuesnumber_2002 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 2002 | Type: read</summary>
	public System.Object Repositoryissuesnumber { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 2003 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoryissuestitle_2003 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 2003 | Type: read</summary>
	public System.Object Repositoryissuestitle { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 2004 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoryissuesbody_2004 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 2004 | Type: read</summary>
	public System.Object Repositoryissuesbody { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 2005 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoryissuescreator_2005 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 2005 | Type: read</summary>
	public System.Object Repositoryissuescreator { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 2006 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoryissuesstate_2006 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 2006 | Type: read</summary>
	public System.Object Repositoryissuesstate { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 2007 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoryissuesassignee_2007 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 2007 | Type: read</summary>
	public System.Object Repositoryissuesassignee { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 2008 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoryissuescreatedat_2008 { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 2008 | Type: read</summary>
	public System.Object Repositoryissuescreatedat { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 2009 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoryissuesupdatedat_2009 { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 2009 | Type: read</summary>
	public System.Object Repositoryissuesupdatedat { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 2010 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoryissuesclosedat_2010 { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 2010 | Type: read</summary>
	public System.Object Repositoryissuesclosedat { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 2011 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Repositoryissuesrepositoryid_2011 { get { if (base.Columns.ContainsKey(10)) { return base.Columns[10]; } else { return null; } } set { if (base.Columns.ContainsKey(10)) { base.Columns[10] = value; } else { base.Columns.Add(10, value); } } }
	/// <summary>PID: 2011 | Type: read</summary>
	public System.Object Repositoryissuesrepositoryid { get { if (base.Columns.ContainsKey(10)) { return base.Columns[10]; } else { return null; } } set { if (base.Columns.ContainsKey(10)) { base.Columns[10] = value; } else { base.Columns.Add(10, value); } } }
	public RepositoryissuesQActionRow() : base(0, 11) { }
	public RepositoryissuesQActionRow(System.Object[] oRow) : base(0, 11, oRow) { }
	public static implicit operator RepositoryissuesQActionRow(System.Object[] source) { return new RepositoryissuesQActionRow(source); }
	public static implicit operator System.Object[](RepositoryissuesQActionRow source) { return source.ToObjectArray(); }
	public System.Object[] GetParentRowRepositoriesRepositoryissuesrepositoryid(SLProtocol protocol) { return (System.Object[])protocol.GetRow(1000, (System.String)Repositoryissuesrepositoryid); }
}
/// <summary>IDX: 0</summary>
public class PollmanagerQActionRow : QActionTableRow
{
	/// <summary>PID: 21001 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollmanagerindex_21001 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 21001 | Type: read</summary>
	public System.Object Pollmanagerindex { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 21002 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollmanagername_21002 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 21002 | Type: read</summary>
	public System.Object Pollmanagername { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 21003 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollmanagerpollstate_21003 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 21003 | Type: read</summary>
	public System.Object Pollmanagerpollstate { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 21004 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollmanagerpollfrequency_21004 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 21004 | Type: read</summary>
	public System.Object Pollmanagerpollfrequency { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 21005 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollmanagerlastpolled_21005 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 21005 | Type: read</summary>
	public System.Object Pollmanagerlastpolled { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 21006 | Type: write</summary>
	public System.Object Pollmanagerrefresh_21006 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 21006 | Type: write</summary>
	public System.Object Pollmanagerrefresh { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 21007 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollmanagerpreviouslypolled_21007 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 21007 | Type: read</summary>
	public System.Object Pollmanagerpreviouslypolled { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	public PollmanagerQActionRow() : base(0, 7) { }
	public PollmanagerQActionRow(System.Object[] oRow) : base(0, 7, oRow) { }
	public static implicit operator PollmanagerQActionRow(System.Object[] source) { return new PollmanagerQActionRow(source); }
	public static implicit operator System.Object[](PollmanagerQActionRow source) { return source.ToObjectArray(); }
}
}
